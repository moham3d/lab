openapi: 3.0.3
info:
  title: Patient Visit Management System API
  version: 1.0.0
  description: Healthcare backend API for patient visit management

servers:
  - url: http://localhost:8000/api/v1
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Patient:
      type: object
      properties:
        id:
          type: string
          format: uuid
        ssn:
          type: string
          pattern: '^\d{14}$'
        mobile_number:
          type: string
          pattern: '^01[0-2]\d{8}$'
        phone_number:
          type: string
        medical_number:
          type: string
        full_name:
          type: string
          minLength: 2
          maxLength: 255
        date_of_birth:
          type: string
          format: date
        gender:
          type: string
          enum: [male, female, other]
      required: [ssn, mobile_number, full_name]

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [nurse, physician, admin]
      required: [username, email, role]

    PatientVisit:
      type: object
      properties:
        id:
          type: string
          format: uuid
        patient_id:
          type: string
          format: uuid
        visit_date:
          type: string
          format: date-time
        status:
          type: string
          enum: [open, completed, cancelled]
      required: [patient_id, visit_date, status]

    VitalSigns:
      type: object
      properties:
        temperature_celsius:
          type: number
          minimum: 30.0
          maximum: 45.0
        pulse_bpm:
          type: integer
          minimum: 30
          maximum: 200
        blood_pressure_systolic:
          type: integer
          minimum: 70
          maximum: 250
        blood_pressure_diastolic:
          type: integer
          minimum: 40
          maximum: 150
        respiratory_rate_per_min:
          type: integer
          minimum: 8
          maximum: 60
        oxygen_saturation_percent:
          type: number
          minimum: 70.0
          maximum: 100.0

    Error:
      type: object
      properties:
        detail:
          type: string
      required: [detail]

paths:
  /auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  token_type:
                    type: string
                required: [access_token, refresh_token, token_type]
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/refresh:
    post:
      summary: Refresh access token
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required: [refresh_token]
      responses:
        '200':
          description: Token refreshed
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                required: [access_token, token_type]

  /patients/search:
    get:
      summary: Search patients
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          schema:
            type: string
          description: Search query (SSN, mobile, medical number)
      responses:
        '200':
          description: Patients found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patient'

  /patients:
    post:
      summary: Create patient
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '201':
          description: Patient created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'

  /patients/{patient_ssn}:
    get:
      summary: Get patient by SSN
      security:
        - bearerAuth: []
      parameters:
        - name: patient_ssn
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Patient found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
    put:
      summary: Update patient
      security:
        - bearerAuth: []
      parameters:
        - name: patient_ssn
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: Patient updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'

  /patients/{patient_ssn}/history:
    get:
      summary: Get patient visit history
      security:
        - bearerAuth: []
      parameters:
        - name: patient_ssn
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Visit history
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientVisit'

  /visits:
    get:
      summary: List visits
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Visits list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PatientVisit'
    post:
      summary: Create visit
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                patient_ssn:
                  type: string
                visit_date:
                  type: string
                  format: date-time
              required: [patient_ssn, visit_date]
      responses:
        '201':
          description: Visit created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientVisit'

  /visits/{visit_id}:
    get:
      summary: Get visit
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Visit found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientVisit'
    put:
      summary: Update visit
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientVisit'
      responses:
        '200':
          description: Visit updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientVisit'

  /visits/{visit_id}/nursing-assessment:
    post:
      summary: Create nursing assessment
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VitalSigns'
      responses:
        '201':
          description: Assessment created
    get:
      summary: Get nursing assessment
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Assessment found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VitalSigns'
    put:
      summary: Update nursing assessment
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VitalSigns'
      responses:
        '200':
          description: Assessment updated

  /visits/{visit_id}/radiology-assessment:
    post:
      summary: Create radiology assessment
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                findings:
                  type: string
                diagnosis:
                  type: string
                recommendations:
                  type: string
              required: [findings]
      responses:
        '201':
          description: Assessment created
    get:
      summary: Get radiology assessment
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Assessment found

  /visits/{visit_id}/documents:
    post:
      summary: Upload document
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required: [file]
      responses:
        '201':
          description: Document uploaded
    get:
      summary: List documents
      security:
        - bearerAuth: []
      parameters:
        - name: visit_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Documents list

  /documents/{document_id}:
    get:
      summary: Download document
      security:
        - bearerAuth: []
      parameters:
        - name: document_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Document file
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /reports/dashboard:
    get:
      summary: Get dashboard report
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dashboard data

  /reports/patients/statistics:
    get:
      summary: Get patient statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Patient statistics

  /reports/visits/volume:
    get:
      summary: Get visit volume report
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Visit volume data

  /reports/clinical/assessments:
    get:
      summary: Get clinical assessments report
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Assessments data

  /admin/users:
    get:
      summary: List users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Users list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /admin/users/{user_id}:
    put:
      summary: Update user
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'