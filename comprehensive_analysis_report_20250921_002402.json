{
  "executive_summary": {
    "analysis_date": "2025-09-21T00:24:01.545337",
    "execution_time_seconds": 1.317285,
    "total_tests_run": 36,
    "tests_passed": 28,
    "tests_failed": 1,
    "tests_with_errors": 7,
    "pass_rate_percent": 77.77777777777779,
    "security_findings": {
      "critical": 0,
      "high": 0,
      "medium": 2,
      "low": 0,
      "total": 2
    },
    "overall_health_score": 67.77777777777779
  },
  "technical_analysis": {
    "code_structure": {
      "structure": {
        "total_files": 45,
        "python_files": 45,
        "test_files": 8,
        "api_endpoints": 7,
        "models": 7,
        "services": 7,
        "schemas": 6,
        "directories": [
          "app",
          "app/utils",
          "app/services",
          "app/api",
          "app/api/v1",
          "app/api/v1/endpoints",
          "app/tests",
          "app/tests/contract",
          "app/core",
          "app/schemas",
          "app/models"
        ]
      }
    },
    "dependency_status": "See detailed test results",
    "configuration_status": "See detailed test results"
  },
  "test_results": [
    {
      "name": "Python Environment",
      "status": "PASS",
      "details": "Python version: Python 3.12.3",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:01.547020"
    },
    {
      "name": "Dependency: fastapi",
      "status": "PASS",
      "details": "fastapi is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:01.907898"
    },
    {
      "name": "Dependency: sqlalchemy",
      "status": "PASS",
      "details": "sqlalchemy is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.014814"
    },
    {
      "name": "Dependency: asyncpg",
      "status": "PASS",
      "details": "asyncpg is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.027543"
    },
    {
      "name": "Dependency: aiosqlite",
      "status": "PASS",
      "details": "aiosqlite is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.045018"
    },
    {
      "name": "Dependency: pydantic",
      "status": "PASS",
      "details": "pydantic is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.045022"
    },
    {
      "name": "Dependency: pytest",
      "status": "PASS",
      "details": "pytest is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.089983"
    },
    {
      "name": "Dependency: httpx",
      "status": "PASS",
      "details": "httpx is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.279847"
    },
    {
      "name": "Configuration Loading",
      "status": "ERROR",
      "details": "Failed to load configuration: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298098"
    },
    {
      "name": "Structure: app/",
      "status": "PASS",
      "details": "Main application directory - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298165"
    },
    {
      "name": "Structure: app/api/",
      "status": "PASS",
      "details": "API endpoints - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298185"
    },
    {
      "name": "Structure: app/core/",
      "status": "PASS",
      "details": "Core functionality - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298204"
    },
    {
      "name": "Structure: app/models/",
      "status": "PASS",
      "details": "Database models - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298223"
    },
    {
      "name": "Structure: app/schemas/",
      "status": "PASS",
      "details": "Pydantic schemas - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298251"
    },
    {
      "name": "Structure: app/services/",
      "status": "PASS",
      "details": "Business logic services - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298271"
    },
    {
      "name": "Structure: app/tests/",
      "status": "PASS",
      "details": "Test suite - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298281"
    },
    {
      "name": "Structure: app/utils/",
      "status": "PASS",
      "details": "Utility functions - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298291"
    },
    {
      "name": "Structure: alembic/",
      "status": "PASS",
      "details": "Database migrations - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298301"
    },
    {
      "name": "Structure: requirements.txt",
      "status": "PASS",
      "details": "Python dependencies - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298310"
    },
    {
      "name": "Structure: docker-compose.yml",
      "status": "PASS",
      "details": "Container orchestration - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298318"
    },
    {
      "name": "Structure: .env.example",
      "status": "PASS",
      "details": "Environment template - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.298327"
    },
    {
      "name": "Import: app.main",
      "status": "ERROR",
      "details": "Error importing app.main: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.386854"
    },
    {
      "name": "Import: app.core.config",
      "status": "ERROR",
      "details": "Error importing app.core.config: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.396201"
    },
    {
      "name": "Import: app.database",
      "status": "ERROR",
      "details": "Error importing app.database: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.406221"
    },
    {
      "name": "Import: app.api.v1.api",
      "status": "ERROR",
      "details": "Error importing app.api.v1.api: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.415673"
    },
    {
      "name": "Import: app.models.user",
      "status": "PASS",
      "details": "Successfully imported app.models.user",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.454519"
    },
    {
      "name": "Import: app.models.patient",
      "status": "PASS",
      "details": "Successfully imported app.models.patient",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.454522"
    },
    {
      "name": "Import: app.services.auth_service",
      "status": "ERROR",
      "details": "Error importing app.services.auth_service: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.465008"
    },
    {
      "name": "Database Models Count",
      "status": "PASS",
      "details": "Found 6 model files",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.465282"
    },
    {
      "name": "Model: user.py",
      "status": "PASS",
      "details": "user.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.465309"
    },
    {
      "name": "Model: patient.py",
      "status": "PASS",
      "details": "patient.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.465325"
    },
    {
      "name": "Model: visit.py",
      "status": "PASS",
      "details": "visit.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.465337"
    },
    {
      "name": "Model: assessment.py",
      "status": "PASS",
      "details": "assessment.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.465348"
    },
    {
      "name": "Model: document.py",
      "status": "PASS",
      "details": "document.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.465359"
    },
    {
      "name": "Static Analysis (Flake8)",
      "status": "FAIL",
      "details": "Issues found:\napp/services/audit_service.py:314:23: E999 SyntaxError: invalid syntax\n1     E999 SyntaxError: invalid syntax\n1\n\n",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.861235"
    },
    {
      "name": "Database Connection",
      "status": "ERROR",
      "details": "Failed to test database connection: asyncio.run() cannot be called from a running event loop",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:02.861317"
    }
  ],
  "security_findings": [
    {
      "severity": "MEDIUM",
      "title": "Potential Hardcoded Password",
      "description": "File app/tests/contract/test_auth.py may contain hardcoded credentials",
      "file_path": "app/tests/contract/test_auth.py",
      "recommendation": "Use environment variables or secure configuration"
    },
    {
      "severity": "MEDIUM",
      "title": "Potential Hardcoded Password",
      "description": "File app/models/user.py may contain hardcoded credentials",
      "file_path": "app/models/user.py",
      "recommendation": "Use environment variables or secure configuration"
    }
  ],
  "performance_metrics": [],
  "recommendations": [
    {
      "priority": "HIGH",
      "category": "Testing",
      "title": "Fix Failed Tests",
      "description": "8 tests are failing. Address these before production deployment.",
      "action": "Review and fix failing tests to ensure system reliability."
    },
    {
      "priority": "MEDIUM",
      "category": "Testing",
      "title": "Insufficient Test Coverage",
      "description": "Test coverage appears low based on file count analysis.",
      "action": "Increase test coverage to at least 80% for production readiness."
    },
    {
      "priority": "HIGH",
      "category": "HIPAA Compliance",
      "title": "HIPAA Audit Trail",
      "description": "Ensure all patient data access is logged for HIPAA compliance.",
      "action": "Implement comprehensive audit logging for all patient data operations."
    },
    {
      "priority": "HIGH",
      "category": "Security",
      "title": "Data Encryption",
      "description": "Verify all patient health information (PHI) is encrypted at rest and in transit.",
      "action": "Implement AES-256 encryption for sensitive data storage."
    },
    {
      "priority": "MEDIUM",
      "category": "Performance",
      "title": "Response Time Optimization",
      "description": "Healthcare applications should maintain <500ms response times.",
      "action": "Conduct performance testing and optimize slow endpoints."
    }
  ]
}