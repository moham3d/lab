{
  "executive_summary": {
    "analysis_date": "2025-09-21T00:24:51.487545",
    "execution_time_seconds": 1.249871,
    "total_tests_run": 36,
    "tests_passed": 29,
    "tests_failed": 0,
    "tests_with_errors": 7,
    "pass_rate_percent": 80.55555555555556,
    "security_findings": {
      "critical": 0,
      "high": 0,
      "medium": 2,
      "low": 0,
      "total": 2
    },
    "overall_health_score": 70.55555555555556
  },
  "technical_analysis": {
    "code_structure": {
      "structure": {
        "total_files": 45,
        "python_files": 45,
        "test_files": 8,
        "api_endpoints": 7,
        "models": 7,
        "services": 7,
        "schemas": 6,
        "directories": [
          "app",
          "app/utils",
          "app/services",
          "app/api",
          "app/api/v1",
          "app/api/v1/endpoints",
          "app/tests",
          "app/tests/contract",
          "app/core",
          "app/schemas",
          "app/models"
        ]
      }
    },
    "dependency_status": "See detailed test results",
    "configuration_status": "See detailed test results"
  },
  "test_results": [
    {
      "name": "Python Environment",
      "status": "PASS",
      "details": "Python version: Python 3.12.3",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:51.489350"
    },
    {
      "name": "Dependency: fastapi",
      "status": "PASS",
      "details": "fastapi is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:51.897217"
    },
    {
      "name": "Dependency: sqlalchemy",
      "status": "PASS",
      "details": "sqlalchemy is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.007541"
    },
    {
      "name": "Dependency: asyncpg",
      "status": "PASS",
      "details": "asyncpg is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.020756"
    },
    {
      "name": "Dependency: aiosqlite",
      "status": "PASS",
      "details": "aiosqlite is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.023513"
    },
    {
      "name": "Dependency: pydantic",
      "status": "PASS",
      "details": "pydantic is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.023517"
    },
    {
      "name": "Dependency: pytest",
      "status": "PASS",
      "details": "pytest is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.070612"
    },
    {
      "name": "Dependency: httpx",
      "status": "PASS",
      "details": "httpx is available",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.138126"
    },
    {
      "name": "Configuration Loading",
      "status": "ERROR",
      "details": "Failed to load configuration: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156390"
    },
    {
      "name": "Structure: app/",
      "status": "PASS",
      "details": "Main application directory - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156466"
    },
    {
      "name": "Structure: app/api/",
      "status": "PASS",
      "details": "API endpoints - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156482"
    },
    {
      "name": "Structure: app/core/",
      "status": "PASS",
      "details": "Core functionality - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156494"
    },
    {
      "name": "Structure: app/models/",
      "status": "PASS",
      "details": "Database models - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156504"
    },
    {
      "name": "Structure: app/schemas/",
      "status": "PASS",
      "details": "Pydantic schemas - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156513"
    },
    {
      "name": "Structure: app/services/",
      "status": "PASS",
      "details": "Business logic services - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156523"
    },
    {
      "name": "Structure: app/tests/",
      "status": "PASS",
      "details": "Test suite - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156533"
    },
    {
      "name": "Structure: app/utils/",
      "status": "PASS",
      "details": "Utility functions - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156541"
    },
    {
      "name": "Structure: alembic/",
      "status": "PASS",
      "details": "Database migrations - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156550"
    },
    {
      "name": "Structure: requirements.txt",
      "status": "PASS",
      "details": "Python dependencies - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156559"
    },
    {
      "name": "Structure: docker-compose.yml",
      "status": "PASS",
      "details": "Container orchestration - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156569"
    },
    {
      "name": "Structure: .env.example",
      "status": "PASS",
      "details": "Environment template - Present",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.156577"
    },
    {
      "name": "Import: app.main",
      "status": "ERROR",
      "details": "Error importing app.main: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.244082"
    },
    {
      "name": "Import: app.core.config",
      "status": "ERROR",
      "details": "Error importing app.core.config: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.253696"
    },
    {
      "name": "Import: app.database",
      "status": "ERROR",
      "details": "Error importing app.database: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.263642"
    },
    {
      "name": "Import: app.api.v1.api",
      "status": "ERROR",
      "details": "Error importing app.api.v1.api: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.273654"
    },
    {
      "name": "Import: app.models.user",
      "status": "PASS",
      "details": "Successfully imported app.models.user",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.312056"
    },
    {
      "name": "Import: app.models.patient",
      "status": "PASS",
      "details": "Successfully imported app.models.patient",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.312063"
    },
    {
      "name": "Import: app.services.auth_service",
      "status": "ERROR",
      "details": "Error importing app.services.auth_service: error parsing value for field \"BACKEND_CORS_ORIGINS\" from source \"DotEnvSettingsSource\"",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.322565"
    },
    {
      "name": "Database Models Count",
      "status": "PASS",
      "details": "Found 6 model files",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.322882"
    },
    {
      "name": "Model: user.py",
      "status": "PASS",
      "details": "user.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.322915"
    },
    {
      "name": "Model: patient.py",
      "status": "PASS",
      "details": "patient.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.322932"
    },
    {
      "name": "Model: visit.py",
      "status": "PASS",
      "details": "visit.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.322945"
    },
    {
      "name": "Model: assessment.py",
      "status": "PASS",
      "details": "assessment.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.322956"
    },
    {
      "name": "Model: document.py",
      "status": "PASS",
      "details": "document.py exists",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.322967"
    },
    {
      "name": "Static Analysis (Flake8)",
      "status": "PASS",
      "details": "No critical issues found",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.736276"
    },
    {
      "name": "Database Connection",
      "status": "ERROR",
      "details": "Failed to test database connection: asyncio.run() cannot be called from a running event loop",
      "execution_time": 0.0,
      "timestamp": "2025-09-21T00:24:52.736374"
    }
  ],
  "security_findings": [
    {
      "severity": "MEDIUM",
      "title": "Potential Hardcoded Password",
      "description": "File app/tests/contract/test_auth.py may contain hardcoded credentials",
      "file_path": "app/tests/contract/test_auth.py",
      "recommendation": "Use environment variables or secure configuration"
    },
    {
      "severity": "MEDIUM",
      "title": "Potential Hardcoded Password",
      "description": "File app/models/user.py may contain hardcoded credentials",
      "file_path": "app/models/user.py",
      "recommendation": "Use environment variables or secure configuration"
    }
  ],
  "performance_metrics": [],
  "recommendations": [
    {
      "priority": "HIGH",
      "category": "Testing",
      "title": "Fix Failed Tests",
      "description": "7 tests are failing. Address these before production deployment.",
      "action": "Review and fix failing tests to ensure system reliability."
    },
    {
      "priority": "MEDIUM",
      "category": "Testing",
      "title": "Insufficient Test Coverage",
      "description": "Test coverage appears low based on file count analysis.",
      "action": "Increase test coverage to at least 80% for production readiness."
    },
    {
      "priority": "HIGH",
      "category": "HIPAA Compliance",
      "title": "HIPAA Audit Trail",
      "description": "Ensure all patient data access is logged for HIPAA compliance.",
      "action": "Implement comprehensive audit logging for all patient data operations."
    },
    {
      "priority": "HIGH",
      "category": "Security",
      "title": "Data Encryption",
      "description": "Verify all patient health information (PHI) is encrypted at rest and in transit.",
      "action": "Implement AES-256 encryption for sensitive data storage."
    },
    {
      "priority": "MEDIUM",
      "category": "Performance",
      "title": "Response Time Optimization",
      "description": "Healthcare applications should maintain <500ms response times.",
      "action": "Conduct performance testing and optimize slow endpoints."
    }
  ]
}